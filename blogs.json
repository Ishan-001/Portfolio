{"status":"ok","feed":{"url":"https://medium.com/feed/@ishan_","title":"Stories by Ishan Khandelwal on Medium","link":"https://medium.com/@ishan_?source=rss-349b726e373a------2","author":"","description":"Stories by Ishan Khandelwal on Medium","image":"https://cdn-images-1.medium.com/fit/c/150/150/1*GvVI049Oc9emRAD7WqJWCQ.jpeg"},"items":[{"title":"10 tools and widgets every Android Developer should know about","pubDate":"2020-06-21 21:25:19","link":"https://medium.com/techloop/10-tools-and-widgets-every-android-developer-should-know-about-1a98c089c54e?source=rss-349b726e373a------2","guid":"https://medium.com/p/1a98c089c54e","author":"Ishan Khandelwal","thumbnail":"https://cdn-images-1.medium.com/max/1001/1*Gjd_TKH9KsDo6FK-PDi2xA.jpeg","description":"\n<h3>10 libraries and widgets every Android Developer should\u00a0know</h3>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1001/1*Gjd_TKH9KsDo6FK-PDi2xA.jpeg\"></figure><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*7sLQL3zJR8Gwa3Wh1WgIHw.jpeg\"></figure><p>Android development is one of the hottest domains in Computer Science, and holds a bright future for anyone who wants to get into it. The hardest part for beginners is finding compact and useful resources, and being a developer, its a major part of our job to have useful chunks of resources on our side. Keeping this in mind, I have handpicked 10 android widgets, tools and libraries that every native developer should know about. Starting from basic to intermediate, this list consists of some tools that I frequently use to make work a lot easier. So lets get\u00a0started.</p>\n<h3>RecyclerView</h3>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*NZGnpwl0fBeQm8KP51wt5w.jpeg\"></figure><p>Recycler view is an integral part of almost every app, be it Instagram posts, Spotify playlists, or Amazon products list. It\u2019s similar to a list view but with more functionality. It is mostly coupled with a CardView along with images, texts and buttons, and implemented using an Adapter class extending RecyclerView.Adapter. The adapter class has to implement/override 3 methods:- onCreateViewHolder, onBindViewHolder, and getItemCount. A layout file is passed to the onCreateViewHolder method of the Adapter class to act as the layout for every item. Various operations required on the items can be declared in the onBindViewHolder method.</p>\n<blockquote>XML code:</blockquote>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/790/1*62oHK33sGtyRyJwtNv4BcQ.png\"></figure><blockquote>Adapter class:</blockquote>\n<p>Here is a code sample from a basic adapter for displaying notes.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/842/1*_S_GYpVfwWo5kspWA3nffw.png\"></figure><h3>Spinner</h3>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/573/1*4Vt17n7Hvw0wR6t_OjYevQ.jpeg\"></figure><p>Spinner is a widget we see quite often. It can be spotted by a dropdown arrow beside some text on a button. A spinner creates a dropdown menu on a click. It is basically used when we want the user to select a given item in a list of items. For example, we can use a spinner in a currency converter app to get the currencies to be exchanged by the user. An adapter is used to bind the items to a spinner\u00a0object.</p>\n<blockquote>Code for a simple\u00a0spinner:</blockquote>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*aq1l37bnDVLkH65ZCBAuOg.jpeg\"></figure><blockquote>In strings.xml:</blockquote>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*HEcLglvM68_2wPNJZW8IJw.jpeg\"></figure><blockquote>Now the spinner can be declared\u00a0using:</blockquote>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/878/1*Spe75QqBWXBJqdFMvou-iw.png\"></figure><blockquote>You can checkout the code for a custom image spinner\u00a0here:</blockquote>\n<p><a href=\"https://www.github.com/smoke-trees/Smoking-Rentals/tree/master/Application%2Fapp%2Fsrc%2Fmain%2Fjava%2Fcom%2Fsmoketrees%2Fsmokingrentals%2FVehicleAdapter.java\">https://www.github.com/smoke-trees/Smoking-Rentals/tree/master/Application/app/src/main/java/com/smoketrees/smokingrentals/VehicleAdapter.java</a></p>\n<h3>WebView</h3>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/917/1*rUNB81-qTr0r0jEe9-JKuA.jpeg\"></figure><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*oCOTQpvqHKscfsFppMko_g.jpeg\"></figure><p>A webview is a widget which can be used to render web pages inside your fragment or activity in just one line of\u00a0code.</p>\n<blockquote>webView.loadUrl(url)</blockquote>\n<p>Adding AndroidX webkit gives more functionality to a webview. Javascript is disabled in a webview by default, but you can enable it by using webSettings through<em> webview.getSettings()</em> and stating <em>webSettings.setJavascriptEnabled(true)</em>.</p>\n<p>Remember to request internet access in your manifest file to implement a\u00a0Webview.</p>\n<h3>ImageSlider</h3>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/320/1*tT0IzUSXBDPCCMrsVERT_g.gif\"></figure><p>Image slider, as the name suggests, is used to add multiple images at a specified space in a layout which the user can slide and view. An image slider can be applied inside a recycler view item of a product list for displaying product\u00a0images.</p>\n<p>There is a beautiful custom image slider by <strong>github/smarteist </strong>which you can use by adding the following dependency<strong>:</strong></p>\n<blockquote><em>implementation 'com.github.smarteist:autoimageslider:1.3.9-appcompat'</em></blockquote>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*TPQksPh1LLFRTaVyIoPfvA.jpeg\"></figure><blockquote>You can find more details regarding its implementation on their\u00a0GitHub:</blockquote>\n<p><a href=\"https://github.com/smarteist/Android-Image-Slider/blob/master/README.md\">https://github.com/smarteist/Android-Image-Slider/blob/master/README.md</a></p>\n<h3>BlurDialogFragment</h3>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*jU9Ahwmxx_dJHcGDDcNrkw.png\"></figure><p>BlurDialogFragment is a UI targeted tool which makes a fragment or dialog appear on the screen with a customizable blurring effect, thus providing a more immersive user experience. The blurring effect is achieved through FastBlur algorithm thanks to the impressive work of Pavlo\u00a0Dudka.</p>\n<blockquote>You can add this to your project through this dependency:</blockquote>\n<p><em>implementation \u2018fr.tvbarthel.blurdialogfragment:lib:2.2.0\u2019</em></p>\n<p>In order to add the effect to your fragment, just extend the <em>SupportBlurDialogFragmen</em>t in your fragment\u00a0class.</p>\n<blockquote>For more information, go\u00a0to:</blockquote>\n<p><a href=\"https://github.com/tvbarthel/BlurDialogFragment/blob/master/README.md\">https://github.com/tvbarthel/BlurDialogFragment/blob/master/README.md</a></p>\n<h3>TinyDB</h3>\n<p>TinyDB is a java class which provides an excellent and easy way to store data using Shared Preferences. This class simplifies calls to Shared Preferences in a line of\u00a0code.</p>\n<p><strong>TinyDB tinyDB=new TinyDB(getContext());</strong></p>\n<blockquote><em>//Store data</em></blockquote>\n<blockquote><em>tinyDB.putString(\u201cKey\u201d, \u201cValue\u201d);</em></blockquote>\n<blockquote><em>//Retrieve data</em></blockquote>\n<blockquote><em>String value=tinyDB.getString(\u201cKey\u201d);</em></blockquote>\n<p>You can save numbers, strings, boolean literals, arrays, lists, etc using one line methods provided by\u00a0TinyDB.</p>\n<p>All you have to do is add the TinyDB.java file as a Java class and you are good to\u00a0go.</p>\n<blockquote>For more information regarding TinyDB,\u00a0visit:</blockquote>\n<p><a href=\"https://github.com/kcochibili/TinyDB--Android-Shared-Preferences-Turbo/blob/master/README.md\">https://github.com/kcochibili/TinyDB--Android-Shared-Preferences-Turbo/blob/master/README.md</a></p>\n<h3>Glide</h3>\n<p>Glide is a fast and efficient open source media management and image loading framework for Android that wraps media decoding, memory and disk caching, and resource pooling into a simple and easy to use interface.</p>\n<p>It allows users to perform convenient image loading in their applications, often in one line of code. With\u00a0Glide, an online image can be passed to an ImageView with the help of its\u00a0URL.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*9ve0JwZ5MsGigUzhywABTw.jpeg\"></figure><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*aRHH9VzhpxE_l1WpbP_44A.jpeg\"></figure><p>Glide supports fetching, decoding, and displaying video stills, images, and animated GIFs. Glide includes a flexible API that allows developers to plug in to almost any network\u00a0stack.</p>\n<blockquote>The dependencies for\u00a0Glide:</blockquote>\n<p><em>implementation 'com.github.bumptech.glide:glide:4.11.0'</em></p>\n<p><em>annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'</em></p>\n<blockquote>For more information, you can reference the GitHub repository:</blockquote>\n<p><a href=\"https://github.com/bumptech/glide\">https://github.com/bumptech/glide</a></p>\n<blockquote>You can also visit the official\u00a0website:</blockquote>\n<p><a href=\"https://bumptech.github.io/glide/\">https://bumptech.github.io/glide/</a></p>\n<h3>Retrofit</h3>\n<p>Retrofit 2.0 is one of the most popular libraries among developers to access REST APIs in their projects. It is a type safe HTTP client for android and turns the required HTTP API into a java interface.</p>\n<p>Retrofit can be implemented in 3\u00a0steps:</p>\n<ul><li>Creating an interface to declare annotated request methods(PUT, POST, GET,\u00a0etc).</li></ul>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*vR9WfjBe0fXiz0NfCyfgng.jpeg\"></figure><ul><li>Creating a class to store the response body: If the request demands a response from the server as JSON, then Retrofit take cares of it and converts JSON into java objects using <strong>GsonConverterFactory. </strong>We can generate the required classes manually or through <a href=\"http://www.jsonschema2pojo.org/\">http://www.jsonschema2pojo.org</a> which gives you the required java classes by taking sample response JSON as\u00a0input.</li></ul>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*q-be8Zhl_WPi7SoOSxZF5Q.jpeg\"></figure><ul><li>Creating an instance of Retrofit in your Activity: The last step is to declare a Retrofit object with GsonConverterFactory and base URL, and then make a HTTP request to the remote web\u00a0server.</li></ul>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*jjARoasSRXnIwJVO3dMxMg.jpeg\"></figure><blockquote>To implement Retrofit 2.0 in your project, add the dependency:</blockquote>\n<p>implementation \u2018com.squareup.retrofit2:retrofit:2.9.0'</p>\n<blockquote>For more information, visit:</blockquote>\n<p><a href=\"https://square.github.io/retrofit/\">https://square.github.io/retrofit/</a></p>\n<h3>AnyChart</h3>\n<p>In case you need to visualize data in your android application, AnyChart is the library for you. AnyChart is an amazing easy to use data visualization library for creating interactive charts and graphs in your apps. It has dozens of built-in chart types for you to\u00a0choose.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*ovibFx40feZrjdZgH-eOKg.jpeg\"></figure><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*bxhwMWStKFBS2izwX9hC8g.jpeg\"></figure><blockquote><em>Dependency for AnyChart\u00a0Android:</em></blockquote>\n<p><em>implementation 'com.github.AnyChart:AnyChart-Android:1.1.2'</em></p>\n<h4>Adding a basic\u00a0chart:</h4>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*dnofxh_Kus2UgCQM2PVWdg.jpeg\"></figure><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*Sjcr__upCD0j-nZpF2BLDg.jpeg\"></figure><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*I2ihzhnGueM9yuqnqH2RCA.png\"></figure><blockquote>For more information, visit:</blockquote>\n<p><a href=\"https://github.com/AnyChart/AnyChart-Android\">https://github.com/AnyChart/AnyChart-Android</a></p>\n<h3>Balloon</h3>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/774/1*O45hzko0xe_RJxvVfOMbIQ.jpeg\"></figure><p>Balloon is a UI oriented android library for loading custom\u00a0popups.</p>\n<p>It describes itself as \u2018A lightweight popup like tooltips, fully customizable with arrow and animations\u2019. Its an amazingly useful library and a massive upgrade over\u00a0tooltips.</p>\n<blockquote><em>To include Balloon in your project, add this dependency to build.gradle file:</em></blockquote>\n<p><em>implementation \u2018com.github.skydoves:balloon:1.1.8'</em></p>\n<p>Here is a basic example of Balloon implementation in java showcasing its fully customizable features:</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*CvUhE8Dm_tz2aQjIDJCQ7A.jpeg\"></figure><blockquote>For more info, go\u00a0to:</blockquote>\n<p><a href=\"https://github.com/skydoves/Balloon\">https://github.com/skydoves/Balloon</a></p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=1a98c089c54e\" width=\"1\" height=\"1\" alt=\"\"><hr>\n<p><a href=\"https://medium.com/techloop/10-tools-and-widgets-every-android-developer-should-know-about-1a98c089c54e\">10 tools and widgets every Android Developer should know about</a> was originally published in <a href=\"https://medium.com/techloop\">Techloop</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>\n","content":"\n<h3>10 libraries and widgets every Android Developer should\u00a0know</h3>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1001/1*Gjd_TKH9KsDo6FK-PDi2xA.jpeg\"></figure><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*7sLQL3zJR8Gwa3Wh1WgIHw.jpeg\"></figure><p>Android development is one of the hottest domains in Computer Science, and holds a bright future for anyone who wants to get into it. The hardest part for beginners is finding compact and useful resources, and being a developer, its a major part of our job to have useful chunks of resources on our side. Keeping this in mind, I have handpicked 10 android widgets, tools and libraries that every native developer should know about. Starting from basic to intermediate, this list consists of some tools that I frequently use to make work a lot easier. So lets get\u00a0started.</p>\n<h3>RecyclerView</h3>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*NZGnpwl0fBeQm8KP51wt5w.jpeg\"></figure><p>Recycler view is an integral part of almost every app, be it Instagram posts, Spotify playlists, or Amazon products list. It\u2019s similar to a list view but with more functionality. It is mostly coupled with a CardView along with images, texts and buttons, and implemented using an Adapter class extending RecyclerView.Adapter. The adapter class has to implement/override 3 methods:- onCreateViewHolder, onBindViewHolder, and getItemCount. A layout file is passed to the onCreateViewHolder method of the Adapter class to act as the layout for every item. Various operations required on the items can be declared in the onBindViewHolder method.</p>\n<blockquote>XML code:</blockquote>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/790/1*62oHK33sGtyRyJwtNv4BcQ.png\"></figure><blockquote>Adapter class:</blockquote>\n<p>Here is a code sample from a basic adapter for displaying notes.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/842/1*_S_GYpVfwWo5kspWA3nffw.png\"></figure><h3>Spinner</h3>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/573/1*4Vt17n7Hvw0wR6t_OjYevQ.jpeg\"></figure><p>Spinner is a widget we see quite often. It can be spotted by a dropdown arrow beside some text on a button. A spinner creates a dropdown menu on a click. It is basically used when we want the user to select a given item in a list of items. For example, we can use a spinner in a currency converter app to get the currencies to be exchanged by the user. An adapter is used to bind the items to a spinner\u00a0object.</p>\n<blockquote>Code for a simple\u00a0spinner:</blockquote>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*aq1l37bnDVLkH65ZCBAuOg.jpeg\"></figure><blockquote>In strings.xml:</blockquote>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*HEcLglvM68_2wPNJZW8IJw.jpeg\"></figure><blockquote>Now the spinner can be declared\u00a0using:</blockquote>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/878/1*Spe75QqBWXBJqdFMvou-iw.png\"></figure><blockquote>You can checkout the code for a custom image spinner\u00a0here:</blockquote>\n<p><a href=\"https://www.github.com/smoke-trees/Smoking-Rentals/tree/master/Application%2Fapp%2Fsrc%2Fmain%2Fjava%2Fcom%2Fsmoketrees%2Fsmokingrentals%2FVehicleAdapter.java\">https://www.github.com/smoke-trees/Smoking-Rentals/tree/master/Application/app/src/main/java/com/smoketrees/smokingrentals/VehicleAdapter.java</a></p>\n<h3>WebView</h3>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/917/1*rUNB81-qTr0r0jEe9-JKuA.jpeg\"></figure><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*oCOTQpvqHKscfsFppMko_g.jpeg\"></figure><p>A webview is a widget which can be used to render web pages inside your fragment or activity in just one line of\u00a0code.</p>\n<blockquote>webView.loadUrl(url)</blockquote>\n<p>Adding AndroidX webkit gives more functionality to a webview. Javascript is disabled in a webview by default, but you can enable it by using webSettings through<em> webview.getSettings()</em> and stating <em>webSettings.setJavascriptEnabled(true)</em>.</p>\n<p>Remember to request internet access in your manifest file to implement a\u00a0Webview.</p>\n<h3>ImageSlider</h3>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/320/1*tT0IzUSXBDPCCMrsVERT_g.gif\"></figure><p>Image slider, as the name suggests, is used to add multiple images at a specified space in a layout which the user can slide and view. An image slider can be applied inside a recycler view item of a product list for displaying product\u00a0images.</p>\n<p>There is a beautiful custom image slider by <strong>github/smarteist </strong>which you can use by adding the following dependency<strong>:</strong></p>\n<blockquote><em>implementation 'com.github.smarteist:autoimageslider:1.3.9-appcompat'</em></blockquote>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*TPQksPh1LLFRTaVyIoPfvA.jpeg\"></figure><blockquote>You can find more details regarding its implementation on their\u00a0GitHub:</blockquote>\n<p><a href=\"https://github.com/smarteist/Android-Image-Slider/blob/master/README.md\">https://github.com/smarteist/Android-Image-Slider/blob/master/README.md</a></p>\n<h3>BlurDialogFragment</h3>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*jU9Ahwmxx_dJHcGDDcNrkw.png\"></figure><p>BlurDialogFragment is a UI targeted tool which makes a fragment or dialog appear on the screen with a customizable blurring effect, thus providing a more immersive user experience. The blurring effect is achieved through FastBlur algorithm thanks to the impressive work of Pavlo\u00a0Dudka.</p>\n<blockquote>You can add this to your project through this dependency:</blockquote>\n<p><em>implementation \u2018fr.tvbarthel.blurdialogfragment:lib:2.2.0\u2019</em></p>\n<p>In order to add the effect to your fragment, just extend the <em>SupportBlurDialogFragmen</em>t in your fragment\u00a0class.</p>\n<blockquote>For more information, go\u00a0to:</blockquote>\n<p><a href=\"https://github.com/tvbarthel/BlurDialogFragment/blob/master/README.md\">https://github.com/tvbarthel/BlurDialogFragment/blob/master/README.md</a></p>\n<h3>TinyDB</h3>\n<p>TinyDB is a java class which provides an excellent and easy way to store data using Shared Preferences. This class simplifies calls to Shared Preferences in a line of\u00a0code.</p>\n<p><strong>TinyDB tinyDB=new TinyDB(getContext());</strong></p>\n<blockquote><em>//Store data</em></blockquote>\n<blockquote><em>tinyDB.putString(\u201cKey\u201d, \u201cValue\u201d);</em></blockquote>\n<blockquote><em>//Retrieve data</em></blockquote>\n<blockquote><em>String value=tinyDB.getString(\u201cKey\u201d);</em></blockquote>\n<p>You can save numbers, strings, boolean literals, arrays, lists, etc using one line methods provided by\u00a0TinyDB.</p>\n<p>All you have to do is add the TinyDB.java file as a Java class and you are good to\u00a0go.</p>\n<blockquote>For more information regarding TinyDB,\u00a0visit:</blockquote>\n<p><a href=\"https://github.com/kcochibili/TinyDB--Android-Shared-Preferences-Turbo/blob/master/README.md\">https://github.com/kcochibili/TinyDB--Android-Shared-Preferences-Turbo/blob/master/README.md</a></p>\n<h3>Glide</h3>\n<p>Glide is a fast and efficient open source media management and image loading framework for Android that wraps media decoding, memory and disk caching, and resource pooling into a simple and easy to use interface.</p>\n<p>It allows users to perform convenient image loading in their applications, often in one line of code. With\u00a0Glide, an online image can be passed to an ImageView with the help of its\u00a0URL.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*9ve0JwZ5MsGigUzhywABTw.jpeg\"></figure><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*aRHH9VzhpxE_l1WpbP_44A.jpeg\"></figure><p>Glide supports fetching, decoding, and displaying video stills, images, and animated GIFs. Glide includes a flexible API that allows developers to plug in to almost any network\u00a0stack.</p>\n<blockquote>The dependencies for\u00a0Glide:</blockquote>\n<p><em>implementation 'com.github.bumptech.glide:glide:4.11.0'</em></p>\n<p><em>annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'</em></p>\n<blockquote>For more information, you can reference the GitHub repository:</blockquote>\n<p><a href=\"https://github.com/bumptech/glide\">https://github.com/bumptech/glide</a></p>\n<blockquote>You can also visit the official\u00a0website:</blockquote>\n<p><a href=\"https://bumptech.github.io/glide/\">https://bumptech.github.io/glide/</a></p>\n<h3>Retrofit</h3>\n<p>Retrofit 2.0 is one of the most popular libraries among developers to access REST APIs in their projects. It is a type safe HTTP client for android and turns the required HTTP API into a java interface.</p>\n<p>Retrofit can be implemented in 3\u00a0steps:</p>\n<ul><li>Creating an interface to declare annotated request methods(PUT, POST, GET,\u00a0etc).</li></ul>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*vR9WfjBe0fXiz0NfCyfgng.jpeg\"></figure><ul><li>Creating a class to store the response body: If the request demands a response from the server as JSON, then Retrofit take cares of it and converts JSON into java objects using <strong>GsonConverterFactory. </strong>We can generate the required classes manually or through <a href=\"http://www.jsonschema2pojo.org/\">http://www.jsonschema2pojo.org</a> which gives you the required java classes by taking sample response JSON as\u00a0input.</li></ul>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*q-be8Zhl_WPi7SoOSxZF5Q.jpeg\"></figure><ul><li>Creating an instance of Retrofit in your Activity: The last step is to declare a Retrofit object with GsonConverterFactory and base URL, and then make a HTTP request to the remote web\u00a0server.</li></ul>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*jjARoasSRXnIwJVO3dMxMg.jpeg\"></figure><blockquote>To implement Retrofit 2.0 in your project, add the dependency:</blockquote>\n<p>implementation \u2018com.squareup.retrofit2:retrofit:2.9.0'</p>\n<blockquote>For more information, visit:</blockquote>\n<p><a href=\"https://square.github.io/retrofit/\">https://square.github.io/retrofit/</a></p>\n<h3>AnyChart</h3>\n<p>In case you need to visualize data in your android application, AnyChart is the library for you. AnyChart is an amazing easy to use data visualization library for creating interactive charts and graphs in your apps. It has dozens of built-in chart types for you to\u00a0choose.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*ovibFx40feZrjdZgH-eOKg.jpeg\"></figure><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*bxhwMWStKFBS2izwX9hC8g.jpeg\"></figure><blockquote><em>Dependency for AnyChart\u00a0Android:</em></blockquote>\n<p><em>implementation 'com.github.AnyChart:AnyChart-Android:1.1.2'</em></p>\n<h4>Adding a basic\u00a0chart:</h4>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*dnofxh_Kus2UgCQM2PVWdg.jpeg\"></figure><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*Sjcr__upCD0j-nZpF2BLDg.jpeg\"></figure><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*I2ihzhnGueM9yuqnqH2RCA.png\"></figure><blockquote>For more information, visit:</blockquote>\n<p><a href=\"https://github.com/AnyChart/AnyChart-Android\">https://github.com/AnyChart/AnyChart-Android</a></p>\n<h3>Balloon</h3>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/774/1*O45hzko0xe_RJxvVfOMbIQ.jpeg\"></figure><p>Balloon is a UI oriented android library for loading custom\u00a0popups.</p>\n<p>It describes itself as \u2018A lightweight popup like tooltips, fully customizable with arrow and animations\u2019. Its an amazingly useful library and a massive upgrade over\u00a0tooltips.</p>\n<blockquote><em>To include Balloon in your project, add this dependency to build.gradle file:</em></blockquote>\n<p><em>implementation \u2018com.github.skydoves:balloon:1.1.8'</em></p>\n<p>Here is a basic example of Balloon implementation in java showcasing its fully customizable features:</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*CvUhE8Dm_tz2aQjIDJCQ7A.jpeg\"></figure><blockquote>For more info, go\u00a0to:</blockquote>\n<p><a href=\"https://github.com/skydoves/Balloon\">https://github.com/skydoves/Balloon</a></p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=1a98c089c54e\" width=\"1\" height=\"1\" alt=\"\"><hr>\n<p><a href=\"https://medium.com/techloop/10-tools-and-widgets-every-android-developer-should-know-about-1a98c089c54e\">10 tools and widgets every Android Developer should know about</a> was originally published in <a href=\"https://medium.com/techloop\">Techloop</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>\n","enclosure":{},"categories":["android","android-studio","mobile-app-development","android-app-development","java"]}]}